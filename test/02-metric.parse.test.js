const buffer = new Buffer('0c00000043494d4c00000000aafcffff040000000600000008' +
  '03000064020000d00100002c010000a00000000400000076ffffff18000000880300005400' +
  '00003d9de6600000000000000000e4feffff18000000000000063d9de66000000000000000' +
  '001800000006fdffff040000000400000074727565000000000d00000063726173682d626f' +
  '6f6c65616e0000002400000030303030303030302d303030302d303030302d303030302d30' +
  '303030303030303030303000000e001c00100008000c00000004000e00000018000000f002' +
  '0000500000003d9de66000000000000000004cfeffff1c000000000000053d9de660000000' +
  '0018000000000006000c0004000600000000000000000014400c00000063726173682d6e75' +
  '6d626572000000002400000030303030303030302d303030302d303030302d303030302d30' +
  '3030303030303030303030000000003efeffff2000000068020000680000003d9de6600000' +
  '00000c001c0018000c000b0004000c00000018000000000000063d9de66000000000000000' +
  '00240000002efeffff04000000110000006120646966666572656e742076616c7565000000' +
  '0c00000063726173682d737472696e67000000002400000030303030303030302d30303030' +
  '2d303030302d303030302d30303030303030303030303000000000defeffff20000000c801' +
  '0000580000006d95e660000000000c00180014000c000b0004000c00000014000000000000' +
  '066d95e6600000000018000000cafeffff040000000500000066616c73650000000d000000' +
  '63726173682d626f6f6c65616e0000002400000030303030303030302d303030302d303030' +
  '302d303030302d303030303030303030303030000000006effffff20000000380100005c00' +
  '00006d95e660000000000c001a0014000c000b0004000c0000001c000000000000056d95e6' +
  '60000000001c000000000006001000040006000000000000000000f03f000000000c000000' +
  '63726173682d6e756d626572000000002400000030303030303030302d303030302d303030' +
  '302d303030302d30303030303030303030303000000e001800100008000c00000004000e00' +
  '00002000000098000000640000006d95e660000000000c001e0018000c000b0004000c0000' +
  '0020000000000000066d95e660000000000000000020000000000006000800040006000000' +
  '0400000007000000612076616c7565000c00000063726173682d737472696e670000000024' +
  '00000030303030303030302d303030302d303030302d303030302d30303030303030303030' +
  '3030000000000000000009000000636865636b4e616d65000000', 'hex')

const { Metric, parse, validate } = require('..')
const expect = require('chai').expect

describe('Buffer Parsing', () => {
  it('should parse a pre-existing well-known buffer', () => {
    let list = parse(buffer)

    expect(list).to.be.an('array')

    list.forEach((metric, index) => {
      expect(metric, `Metric at index ${index}`).to.be.instanceof(Metric)
      let clone = Object.assign({}, metric)
      expect(() => validate(clone), `Metric at index ${index}`).not.to.throw()
    })

    expect(list).to.eql([ {
      timestamp: 1625724269,
      uuid: '00000000-0000-0000-0000-000000000000',
      name: 'crash-string',
      value: 'a value',
      type: 'string',
      account: 0,
      checkName: 'checkName',
      tags: [],
    },
    {
      timestamp: 1625724269,
      uuid: '00000000-0000-0000-0000-000000000000',
      name: 'crash-number',
      value: 1,
      type: 'number',
      account: 0,
      checkName: 'checkName',
      tags: [],
    },
    {
      timestamp: 1625724269,
      uuid: '00000000-0000-0000-0000-000000000000',
      name: 'crash-boolean',
      value: 'false',
      type: 'string',
      account: 0,
      checkName: 'checkName',
      tags: [],
    },
    {
      timestamp: 1625726269,
      uuid: '00000000-0000-0000-0000-000000000000',
      name: 'crash-string',
      value: 'a different value',
      type: 'string',
      account: 0,
      checkName: 'checkName',
      tags: [],
    },
    {
      timestamp: 1625726269,
      uuid: '00000000-0000-0000-0000-000000000000',
      name: 'crash-number',
      value: 5,
      type: 'number',
      account: 0,
      checkName: 'checkName',
      tags: [],
    },
    {
      timestamp: 1625726269,
      uuid: '00000000-0000-0000-0000-000000000000',
      name: 'crash-boolean',
      value: 'true',
      type: 'string',
      account: 0,
      checkName: 'checkName',
      tags: [],
    } ])
  })
})

